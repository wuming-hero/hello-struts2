<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
        "http://struts.apache.org/dtds/struts-2.3.dtd">

<struts>

    <constant name="struts.i18n.encoding" value="UTF-8"></constant>
    <constant name="struts.devMode" value="true"></constant>

    <!-- 用来加载其它.xml文件,不需要则不用配置 -->
    <!--<include file="abc.xml"></include>-->

    <!--所有配置都要放在package元素中,而且必须继承struts-default,此文件在lib下,struts-core-2.3.4.1.jar里-->

    <!--若namespace="/xyz",则在访问里的action时会在前面加上/xyz,如/xyz/loginPro,用在模块开发中-->
    <package name="user" namespace="/" extends="struts-default">
        <!--action有3个参数,name与表单提交的name值相同,即此action处理表单请求;class的值指定由哪个类处理;而method则具体指出由哪个方法处理,默认调用execute()方法-->
        <action name="login_*" class="com.wuming.action.LoginAction" method="{1}">
            <!--name属性默认值为"success",下面跳转welcome.jsp中的name属性可以不写-->
            <!--type属性默认值是dispatcher,通常情况下不用写,这些默认属性都是继承struts-default的原因-->
            <result name="success" type="dispatcher">/WEB-INF/content/welcome.jsp</result>
            <result name="register">/WEB-INF/content/register.jsp</result>
            <!--如果注册成功后让它直接列出所有用户,此时则需要跳转到别一个action去处理列出用户请求,此时将type属性设为"redirectAction"即可!-->
            <result name="userList" type="redirectAction">viewUsers</result>
            <result name="error">/WEB-INF/content/error.jsp</result>
            <!--i18n 页面-->
            <result name="I18n_success">/i18n/welcome.jsp</result>
        </action>

        <!--<action name="registPro" class="com.wuming.action.LoginProAction" method="regist">-->
        <!--&lt;!&ndash;如果注册成功后让它直接列出所有用户,此时则需要跳转到别一个action去处理列出用户请求,此时将type属性设为"redirectAction"即可!&ndash;&gt;-->
        <!--<result name="success" type="redirectAction">viewUsers</result>-->
        <!--&lt;!&ndash;<result name="success">WEB-INF/content/welcome.jsp</result>&ndash;&gt;-->
        <!--<result name="error">/WEB-INF/content/error.jsp</result>-->
        <!--</action>-->

        <action name="viewUsers" class="com.wuming.action.ViewUsersAction" method="">
            <result name="success">/WEB-INF/content/usersList.jsp</result>
            <result name="error">/WEB-INF/content/error.jsp</result>
        </action>
    </package>

    <!-- 当使用Json插件时,此时应该继承json-default,json-default继承自struts-default!!这样,结果类型中才有type="json" -->
    <package name="book" namespace="/" extends="json-default">
        <action name="catesList" class="com.wuming.action.CatesListAction">

        </action>

        <action name="getBooks" class="com.wuming.action.GetBooksAction">
            <!-- json类型的result会把整个action实例转换成JSON字符串后作为服务器的响应,这也是使用json插件的作用 -->
            <result type="json"></result>
        </action>
    </package>

    <!-- 文件上传 -->
    <package name="upload" namespace="/" extends="struts-default">
        <action name="uploadPicProAction" class="com.wuming.action.UploadPicProAction">
            <interceptor-ref name="fileUpload">
                <!-- 文件上传的两个配置参数，大小的单位是字节，下面允许上传图片的最大为50k -->
                <!-- 配置文件过滤拦截器的话就要为配置一个struts2定义的文件上传失败的视图名input! -->
                <param name="allowedTypes">image/pjpeg,image/jpeg,image/png,image/bmp,image/gif</param>
                <param name="maximumSize">50000</param>
            </interceptor-ref>

            <!-- 当配置新的过滤规则时，必须要手动配置下默认过滤器 -->
            <interceptor-ref name="defaultStack"></interceptor-ref>

            <result type="chain">picList</result>
            <result name="input">/content/upload/uploadForm.jsp</result>
        </action>
        <action name="picList" class="com.wuming.action.PicListAction">
            <result>/content/upload/picShow.jsp</result>
        </action>
    </package>

    <package name="download" namespace="/" extends="struts-default">
        <!--文件下载需要额外添加struts2-sunspoter-stream-1.0.jar-->
        <!-- 防止文件下载时点取消时抛出异常 -->
        <result-types>
            <result-type name="streamx" class="com.sunspoter.lib.web.struts2.dispatcher.StreamResultX"/>
        </result-types>

        <action name="down" class="com.wuming.action.DownloadProAction">
            <result type="streamx">
                <!-- 该参数指定二进制流的类型 -->
                <param name="contentType">${resType}</param>
                <!-- 指定返回InputStream的方法:Action中是getResource(),这里要去掉get -->
                <param name="inputName">resource</param>
                <!-- 指定下载时，默认的文件名 -->
                <param name="contentDisposition">filename=${resName}</param>
                <!-- 控制文件下载时缓冲的大小 -->
                <param name="bufferSize">4096</param>
            </result>
            <result name="input">/content/download/index.jsp</result>
        </action>
    </package>

    <!--所有配置都要放在package元素中,而且必须继承struts-default 或者继承其他继承于struts-default 的package-->
    <package name="default" namespace="/" extends="struts-default">
        <!--这是一个通用的Action,此处的*表示它可以处理任意请求-->
        <action name="*">
            <!-- 此处的{1}代表上面第一个*所匹配的字符串-->
            <result>/WEB-INF/content/{1}.jsp</result>
        </action>
    </package>


    <!-- Add packages here -->

</struts>
